package TaskManagerApp;

import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Valdez-Ju
 */
public class frmTaskManager extends javax.swing.JFrame {
    TaskManagerApp taskManager = new TaskManagerApp();
    Vector v = new Vector();
    String taskID;
    String taskDescription;
    Task task;


    /**
     * Creates new form frmTaskManager
     */
    public frmTaskManager() {
        JScrollPane scrollPane = new JScrollPane(tblTask);
        scrollPane.setViewportView(tblTask);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnMarkCompleted = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTask = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        btnDeleteTask = new javax.swing.JButton();
        btnListTask = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setText("Add Task");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 31, 147, 43));

        btnMarkCompleted.setText("Mark Task Completed");
        btnMarkCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkCompletedActionPerformed(evt);
            }
        });
        getContentPane().add(btnMarkCompleted, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 85, 147, 41));

        jLabel1.setText("Task ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 57, -1, -1));

        jLabel2.setText("Description");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 88, -1, -1));
        getContentPane().add(txtTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 54, 179, -1));
        getContentPane().add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 85, 176, -1));

        btnDeleteTask.setText("Delete Task");
        btnDeleteTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTaskActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 132, 147, 46));

        btnListTask.setText("List Task");
        btnListTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListTaskActionPerformed(evt);
            }
        });
        getContentPane().add(btnListTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 190, 147, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Description", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 237, 661, 298));

        btnExit.setText("Exit Program");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 189, -1, 42));

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Valdez-Ju\\Downloads\\ndmu field and brc.jpg")); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 550));

        pack();
    }// </editor-fold>                        

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        DefaultTableModel mTask = (DefaultTableModel)this.tblTask.getModel();
        v = new Vector();
        
        if(txtTask.getText().isEmpty() || txtDescription.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill-up all data of TASK", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
        else{
            taskID = txtTask.getText();
            taskDescription = txtDescription.getText();
            task = new Task(taskID, taskDescription);
            taskManager.addTask(task);
            v.add(taskID);
            v.add(taskDescription);
            mTask.addRow(v);
            txtTask.setText("");
            txtDescription.setText("");
        }
    }                                      

    private void btnMarkCompletedActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        int selectedRow= tblTask.getSelectedRow();
        
        if (selectedRow >= 0) {
        // Update the TaskManager (you'll need to implement this method)
        String taskID = (String) tblTask.getValueAt(selectedRow, 0); // Get the Task ID
        taskManager.markTaskAsCompleted(taskID); // Assume you have this method in TaskManager
        
        // Update the status in the table
        tblTask.setValueAt("Completed", selectedRow, 2); // Update the Status column to "Completed"
    } else {
        // Show an error message if no task is selected
        JOptionPane.showMessageDialog(this, "Please select a task to mark as completed", "Error", JOptionPane.ERROR_MESSAGE);
    }                  
    }                                                

    private void btnDeleteTaskActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        int selectedRow = tblTask.getSelectedRow();

    if (selectedRow >= 0) {
        String taskID = (String) tblTask.getValueAt(selectedRow, 0);
        taskManager.removeTask(taskID);
        DefaultTableModel model = (DefaultTableModel) tblTask.getModel();
        model.removeRow(selectedRow);
        
        JOptionPane.showMessageDialog(this, "Task deleted successfully.");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a task to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }        
    }                                             

    private void btnListTaskActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        DefaultTableModel mTask = (DefaultTableModel) this.tblTask.getModel();
    
  
    mTask.setRowCount(0);

    List<Task> tasks = taskManager.listAllTasks(); 

    for (Task task : tasks) {
        Vector<String> row = new Vector<>();
        row.add(task.getTaskId()); // Add Task ID
        row.add(task.getDescription()); // Add Task Description
        row.add(task.isCompleted() ? "Completed" : "Not Completed"); // Add status
        mTask.addRow(row); // Add the row to the table model
    }
    }                                           

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        System.exit(0);
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTaskManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDeleteTask;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnListTask;
    private javax.swing.JButton btnMarkCompleted;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtTask;
    // End of variables declaration                   
